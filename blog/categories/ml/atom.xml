<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: ML | DataLab]]></title>
  <link href="http://datalablu.github.com/blog/categories/ml/atom.xml" rel="self"/>
  <link href="http://datalablu.github.com/"/>
  <updated>2014-05-16T15:21:41+02:00</updated>
  <id>http://datalablu.github.com/</id>
  <author>
    <name><![CDATA[Dzidorius Martinaitis]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Credit card fraud detection]]></title>
    <link href="http://datalablu.github.com/blog/2013/04/09/credit-card-fraud/"/>
    <updated>2013-04-09T06:06:00+02:00</updated>
    <id>http://datalablu.github.com/blog/2013/04/09/credit-card-fraud</id>
    <content type="html"><![CDATA[<p>During the last <a href="https://www.facebook.com/DataScienceLuxembourg">Data Science</a> community meeting in Luxembourg Phd Candidate <a href="https://twitter.com/albahnsen">Alejandro Correa Bahnsen</a> made a presentation on Credit Card Fraud Detection(CCFD). In short - CCFD is just another machine learning problem which is similar to <a href="http://datalab.lu/blog/2012/07/16/data-mining-for-network-security-and-intrusion-detection/">Network Security and Intrusion Detection</a>(NSID) problem, but it has its own obstacles.</p>

<p>From business perspectives - card fraud detection system directly impacts profitability of all credit card operators, therefore are very desirable. The cost of card fraud in <a href="http://en.wikipedia.org/wiki/Credit_card_fraud">the UK alone</a> in 2006 was estimated ~ 500 millions pounds. Assuming, that CCFD system can identify 30% (Churn models at TelComs are able to save that much) of all fraud would lead to 150 millions pound savings a year. Hence, we have a desirable product with price range from 1.5 to 15 millions pounds in the UK. Here is the catch - in any given country there are a few credit card operators, for ex. only <a href="http://www.cetrel.lu">CETREL</a> operates in Luxembourg. So, if you want to sell a solution you play all or nothing game.<br/>
Additionally, if you wish to build a CCFD system or at least a prototype you most likely missing the data and you won't get it. Chicken and egg problem.</p>

<p>How does the data set might look? Think of millions rows where less than 0.002% of data are the fraud operations. If you train your model with unadjusted data set, it will predict all future events as normal operations. In order to avoid such behavior you need to throw away most of the data with normal operations and balance data where distribution would be 1% of fraud vs 99% normal or 5% vs 95%. You can play with freely available <a href="http://www.ll.mit.edu/mission/communications/cyber/CSTcorpora/ideval/data/">network intrusion data</a> to get idea how imbalanced data would look like.</p>

<p>Another thing to keep in mind is the size of data set. Conventional wisdom - the more data you have, the better model you can build, but it is not true if you run a real time system, where latency is big deal. In such case you have to think about something similar to map-reduce framework, where you keep only the averages of the variables per client.</p>

<p>CCFD systems work as binary classificators, where the response either fraud or normal operation, meaning that it doesn't take into account how much fraud cost. Alejandro tries to incorporate loss-profit function, where each operation has its own cost. If you think about his approach - sounds as regression problem to me.</p>

<p>And the last thing - I suppose, it's worth to try to run unsupervised learning system in parallel. Unsupervised CCFD would issue a lot false alerts at the beginning, however it would considerably improve over time with good feedback from supervised CCFD.</p>
]]></content>
  </entry>
  
</feed>
